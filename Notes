###To Add nodes Facts to dir
$ ansible all -m setup --tree <dir>
- Json Fact files will be generated, can be parsed with jq

## MODULES YOU SHOULD KNOW:
- ping
- setup
- package & yum & apt
- command
- file
- copy
- lineinfile
- get_url
- archive
- unarchive
- user
- group
- service
- git

## ansible commad Flags:
* --limit   limit hostname for ansible-playbook
* -P   poll interval
* -B   timeout
* -f   forks
* -b   Become sudo assigned user Default is root
** -m module and -a is arguments for that module
** --tags  and   --skip-tags   when tagging portions of the yaml tasks


## Magic Vars:
- hostvars                  #Inheriting facts
- groups                    #Inheriting inv group   ex : {{groups['webservers']}}

## Facts
- in remote nodes, ansible looks for custom facts in "/etc/ansible/facts.d/" with files of .fact extension
- custom facts written in ini format

EX:     /etc/ansible/facts.d/node_info.fact
{{
[location]
visor=workstation
type=vm
site=laptop
}}

- with setup module command, can be filtered with ansible_local to view customs
    EX: ansible nodes -m setup -a "filter=ansible_local"

## ROLES
- variables in "vars" directory will have priority and precedence over inventory variables.
- variables in "defaults" directory will have the lowest priority even less than inventory variables.
- cli passed variables have the highest most precedence.

## GALAXY
- ansible-galaxy:
    init <name>    : create empty role structure in working dir
    search <name>  : searching for role in galaxy
    install <name> : installs role from galaxy and it's dependencie roles
    remove <name>  : remove this role only neglecting removal of dependencie roles

## VAULT
- ansible-vault:
    encrypt <file> : encrypts file using a given password
    edit <file>    : Edits file providing the password of encryption
    view <file>    : cats file providing the password of encryption
    decrypt <file> : Decrypts the file providing the password of encryption
    encrypt_string <string> -n var : encryts string and feeds the variable with this encryption, asks for pass.

* --vault-id name@Password_File_to_use (which contains the password used for encryption OR the key to use for decryption run

* no_log  module parameter (in same level of module indent); prevents sensitive log output
